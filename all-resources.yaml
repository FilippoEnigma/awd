apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-30T14:48:48Z"
    generateName: jenkins-68c8b7f55-
    labels:
      app: jenkins-server
      pod-template-hash: 68c8b7f55
    name: jenkins-68c8b7f55-qbmct
    namespace: ci-cd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: jenkins-68c8b7f55
      uid: bf49a86a-9ac8-4868-8481-d07d4dcabda3
    resourceVersion: "35933"
    uid: 7e4259fe-8aa1-43d8-85a8-3d1762949327
  spec:
    containers:
    - image: jenkins/jenkins:lts
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /login
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 90
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: jenkins
      ports:
      - containerPort: 8080
        name: httpport
        protocol: TCP
      - containerPort: 50000
        name: jnlpport
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /login
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: "1"
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 500Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/jenkins_home
        name: jenkins-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9ffh2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount: jenkins-admin
    serviceAccountName: jenkins-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: jenkins-data
      persistentVolumeClaim:
        claimName: jenkins-pv-claim
    - name: kube-api-access-9ffh2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:48:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      message: 'containers with unready status: [jenkins]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      message: 'containers with unready status: [jenkins]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:48:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3e9283eb49b45ed38079c42a867872d0127c5377c3b95985fc7869d06c82f75a
      image: docker.io/jenkins/jenkins:lts
      imageID: docker.io/jenkins/jenkins@sha256:429647d4688daa3ca2520fb771a391bae8efa1e4def824b32345f13dde223227
      lastState: {}
      name: jenkins
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3e9283eb49b45ed38079c42a867872d0127c5377c3b95985fc7869d06c82f75a
          exitCode: 255
          finishedAt: "2024-10-30T14:55:30Z"
          reason: Unknown
          startedAt: "2024-10-30T14:52:11Z"
    hostIP: 10.0.2.6
    hostIPs:
    - ip: 10.0.2.6
    phase: Running
    qosClass: Burstable
    startTime: "2024-10-30T14:48:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-10-29T13:29:04Z"
    creationTimestamp: "2024-10-29T13:48:03Z"
    generateName: postgres-5fb45b6f79-
    labels:
      app: postgres
      pod-template-hash: 5fb45b6f79
    name: postgres-5fb45b6f79-smrrk
    namespace: ci-cd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: postgres-5fb45b6f79
      uid: 3286d3ec-d5be-421a-9ad7-d1f749620e3d
    resourceVersion: "35935"
    uid: cf82a05c-8e92-4b85-aadd-945b2fbf3353
  spec:
    containers:
    - env:
      - name: POSTGRES_DB
        valueFrom:
          configMapKeyRef:
            key: POSTGRES_DB
            name: postgres-config
      - name: POSTGRES_USER
        valueFrom:
          configMapKeyRef:
            key: POSTGRES_USER
            name: postgres-config
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: gogs-password
            name: postgres-secret
      image: postgres:13
      imagePullPolicy: IfNotPresent
      name: postgres
      ports:
      - containerPort: 5432
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgres-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vwc8c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node01
    nodeSelector:
      kubernetes.io/hostname: node01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: postgres-storage
      persistentVolumeClaim:
        claimName: postgres-pvc-2
    - name: kube-api-access-vwc8c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-29T13:48:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      message: 'containers with unready status: [postgres]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      message: 'containers with unready status: [postgres]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-29T13:48:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4c71099b62ac0e99939ff952d0000254e0f1d807e6bc93ae62a93cd2bd3f72ac
      image: docker.io/library/postgres:13
      imageID: docker.io/library/postgres@sha256:612b28d1487c46c65273d945818ac9dfc561992761c23acbba464cace55b74f4
      lastState: {}
      name: postgres
      ready: false
      restartCount: 3
      started: false
      state:
        terminated:
          containerID: containerd://4c71099b62ac0e99939ff952d0000254e0f1d807e6bc93ae62a93cd2bd3f72ac
          exitCode: 255
          finishedAt: "2024-10-30T14:55:30Z"
          reason: Unknown
          startedAt: "2024-10-30T14:52:16Z"
    hostIP: 10.0.2.6
    hostIPs:
    - ip: 10.0.2.6
    phase: Running
    qosClass: BestEffort
    startTime: "2024-10-29T13:48:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-29T14:54:00Z"
    generateName: gogs-6794df66fd-
    labels:
      app: gogs
      pod-template-hash: 6794df66fd
      version: v1
    name: gogs-6794df66fd-8wwdp
    namespace: development
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gogs-6794df66fd
      uid: 31db25a0-1e96-4e03-a218-23c68ee7971c
    resourceVersion: "35936"
    uid: 0554f51e-4fce-4450-aa7c-f60584343ae6
  spec:
    containers:
    - env:
      - name: SOCAT_LINK
        value: "false"
      image: gogs/gogs:0.13
      imagePullPolicy: IfNotPresent
      name: gogs
      ports:
      - containerPort: 22
        name: ssh
        protocol: TCP
      - containerPort: 3000
        name: http
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: gogs-persistent-storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lvdrp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: gogs-persistent-storage
      persistentVolumeClaim:
        claimName: gogs-pv-claim
    - name: kube-api-access-lvdrp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-29T14:54:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      message: 'containers with unready status: [gogs]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      message: 'containers with unready status: [gogs]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-29T14:54:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://00288aef98c278c7ad2d45c35d5ea507cfd6043ca7507c4c6549b5e9d8e0f9b2
      image: docker.io/gogs/gogs:0.13
      imageID: docker.io/gogs/gogs@sha256:89af001c006d137b9695e7f763a78cd6cc25a7ec715e431dca95d1e5285a03e1
      lastState: {}
      name: gogs
      ready: false
      restartCount: 3
      started: false
      state:
        terminated:
          containerID: containerd://00288aef98c278c7ad2d45c35d5ea507cfd6043ca7507c4c6549b5e9d8e0f9b2
          exitCode: 255
          finishedAt: "2024-10-30T14:55:30Z"
          reason: Unknown
          startedAt: "2024-10-30T14:52:11Z"
    hostIP: 10.0.2.6
    hostIPs:
    - ip: 10.0.2.6
    phase: Running
    qosClass: BestEffort
    startTime: "2024-10-29T14:54:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-29T14:37:20Z"
    labels:
      run: psql-client
    name: psql-client
    namespace: development
    resourceVersion: "35934"
    uid: 600d0e3a-b2a7-4ac0-98f0-93ba54078e6a
  spec:
    containers:
    - args:
      - bash
      image: postgres
      imagePullPolicy: Always
      name: psql-client
      resources: {}
      stdin: true
      stdinOnce: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      tty: true
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8nbnb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8nbnb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-29T14:37:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      message: 'containers with unready status: [psql-client]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:42Z"
      message: 'containers with unready status: [psql-client]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-29T14:37:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5b49a71691012564f86bcd5bbccf4bcafa989e41bb57a224fb2fb2a851c6af64
      image: docker.io/library/postgres:latest
      imageID: docker.io/library/postgres@sha256:8d3be35b184e70d81e54cbcbd3df3c0b47f37d06482c0dd1c140db5dbcc6a808
      lastState: {}
      name: psql-client
      ready: false
      restartCount: 4
      started: false
      state:
        terminated:
          containerID: containerd://5b49a71691012564f86bcd5bbccf4bcafa989e41bb57a224fb2fb2a851c6af64
          exitCode: 255
          finishedAt: "2024-10-30T14:55:30Z"
          reason: Unknown
          startedAt: "2024-10-30T14:52:17Z"
    hostIP: 10.0.2.6
    hostIPs:
    - ip: 10.0.2.6
    phase: Running
    qosClass: BestEffort
    startTime: "2024-10-29T14:37:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-17T20:53:39Z"
    generateName: coredns-55cb58b774-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 55cb58b774
    name: coredns-55cb58b774-kgbjg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-55cb58b774
      uid: c0806995-a290-4ec4-bb6d-b88007426a48
    resourceVersion: "35931"
    uid: af340b4e-49d2-46e3-8333-f7c59fe5d28b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m249t
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: controlplane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-m249t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:41Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-17T21:19:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:41Z"
      message: 'containers with unready status: [coredns]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:41Z"
      message: 'containers with unready status: [coredns]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-17T21:19:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://04ae9c18da6dd338a2a774cdc83dcc984fe9801e666671d86e8a3c966682667d
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imageID: registry.k8s.io/coredns/coredns@sha256:9caabbf6238b189a65d0d6e6ac138de60d6a1c419e5a341fbbb7c78382559c6e
      lastState: {}
      name: coredns
      ready: false
      restartCount: 7
      started: false
      state:
        terminated:
          containerID: containerd://04ae9c18da6dd338a2a774cdc83dcc984fe9801e666671d86e8a3c966682667d
          exitCode: 255
          finishedAt: "2024-10-30T14:55:34Z"
          reason: Unknown
          startedAt: "2024-10-30T14:50:20Z"
    hostIP: 10.0.2.4
    hostIPs:
    - ip: 10.0.2.4
    phase: Running
    qosClass: Burstable
    startTime: "2024-10-17T21:19:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-17T20:53:39Z"
    generateName: coredns-55cb58b774-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 55cb58b774
    name: coredns-55cb58b774-z9rfq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-55cb58b774
      uid: c0806995-a290-4ec4-bb6d-b88007426a48
    resourceVersion: "35929"
    uid: 89bb1d2c-504f-46d6-8626-3e8f2e0f4ada
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lrr4r
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: controlplane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-lrr4r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:41Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-17T21:19:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:41Z"
      message: 'containers with unready status: [coredns]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:55:41Z"
      message: 'containers with unready status: [coredns]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-17T21:19:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c1ff55ce21abafcf91cb2a79d2a88c8929ee2940e178ecdff00d64e18fdf1423
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imageID: registry.k8s.io/coredns/coredns@sha256:9caabbf6238b189a65d0d6e6ac138de60d6a1c419e5a341fbbb7c78382559c6e
      lastState: {}
      name: coredns
      ready: false
      restartCount: 7
      started: false
      state:
        terminated:
          containerID: containerd://c1ff55ce21abafcf91cb2a79d2a88c8929ee2940e178ecdff00d64e18fdf1423
          exitCode: 255
          finishedAt: "2024-10-30T14:55:34Z"
          reason: Unknown
          startedAt: "2024-10-30T14:50:14Z"
    hostIP: 10.0.2.4
    hostIPs:
    - ip: 10.0.2.4
    phase: Running
    qosClass: Burstable
    startTime: "2024-10-17T21:19:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://10.0.2.4:2379
      kubernetes.io/config.hash: c388fd0f1930d86bb18180ae3366676f
      kubernetes.io/config.mirror: c388fd0f1930d86bb18180ae3366676f
      kubernetes.io/config.seen: "2024-10-17T20:53:22.732648096Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-10-17T20:53:22Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-controlplane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: controlplane
      uid: 4e254976-65b8-4e92-a058-ef8a18571c97
    resourceVersion: "36835"
    uid: 899c2693-3441-4d96-832b-1b2da49353d2
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://10.0.2.4:2379
      - --cert-file=/etc/kubernetes/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --experimental-initial-corrupt-check=true
      - --experimental-watch-progress-notify-interval=5s
      - --initial-advertise-peer-urls=https://10.0.2.4:2380
      - --initial-cluster=controlplane=https://10.0.2.4:2380
      - --key-file=/etc/kubernetes/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://10.0.2.4:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://10.0.2.4:2380
      - --name=controlplane
      - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
      - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.15-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health?exclude=NOSPACE&serializable=true
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health?serializable=false
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /etc/kubernetes/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://56c728d08cb07f6779dbd12a1f392f661a02914aea847eeb0f183a38140b7640
      image: registry.k8s.io/etcd:3.5.15-0
      imageID: registry.k8s.io/etcd@sha256:a6dc63e6e8cfa0307d7851762fa6b629afb18f28d8aa3fab5a6e91b4af60026a
      lastState:
        terminated:
          containerID: containerd://0e1ef4d7724c630449dc25fc174c7a65dd0628048eb87bf40aa577194662cacc
          exitCode: 255
          finishedAt: "2024-10-30T15:01:22Z"
          reason: Unknown
          startedAt: "2024-10-30T14:55:38Z"
      name: etcd
      ready: true
      restartCount: 10
      started: true
      state:
        running:
          startedAt: "2024-10-30T15:01:24Z"
    hostIP: 10.0.2.4
    hostIPs:
    - ip: 10.0.2.4
    phase: Running
    podIP: 10.0.2.4
    podIPs:
    - ip: 10.0.2.4
    qosClass: Burstable
    startTime: "2024-10-30T15:01:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 10.0.2.4:6443
      kubernetes.io/config.hash: 433c65c502aa3bcedc191588852d0036
      kubernetes.io/config.mirror: 433c65c502aa3bcedc191588852d0036
      kubernetes.io/config.seen: "2024-10-17T20:53:19.209158357Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-10-17T20:53:22Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-controlplane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: controlplane
      uid: 4e254976-65b8-4e92-a058-ef8a18571c97
    resourceVersion: "36850"
    uid: e2a95bab-a264-4e76-b7d0-ea5a14f2f2a0
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=10.0.2.4
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
      - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
      - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/etc/kubernetes/pki/sa.pub
      - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
      - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.30.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 10.0.2.4
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 10.0.2.4
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 10.0.2.4
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://943c49081af73c5ab8bd731ce36263f545367c9b07565415b998dccc20b29077
      image: registry.k8s.io/kube-apiserver:v1.30.5
      imageID: registry.k8s.io/kube-apiserver@sha256:7746ea55ad74e24b8edebb53fb979ffe802e2bc47e3b7a12c8e1b0961d273ed2
      lastState:
        terminated:
          containerID: containerd://8262ffff3c409bcf9966d5967ed5f952b2499129c5c61be30e3a644ebcfb60f9
          exitCode: 255
          finishedAt: "2024-10-30T15:01:22Z"
          reason: Unknown
          startedAt: "2024-10-30T14:55:38Z"
      name: kube-apiserver
      ready: true
      restartCount: 10
      started: true
      state:
        running:
          startedAt: "2024-10-30T15:01:24Z"
    hostIP: 10.0.2.4
    hostIPs:
    - ip: 10.0.2.4
    phase: Running
    podIP: 10.0.2.4
    podIPs:
    - ip: 10.0.2.4
    qosClass: Burstable
    startTime: "2024-10-30T15:01:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: a13141bbff7312c27399b31c17159734
      kubernetes.io/config.mirror: a13141bbff7312c27399b31c17159734
      kubernetes.io/config.seen: "2024-10-17T20:53:22.732651104Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-10-17T20:53:22Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-controlplane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: controlplane
      uid: 4e254976-65b8-4e92-a058-ef8a18571c97
    resourceVersion: "36848"
    uid: 78a39d43-115b-47e3-949f-73eef9766d65
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --allocate-node-cidrs=true
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/etc/kubernetes/pki/ca.crt
      - --cluster-cidr=10.244.0.0/16
      - --cluster-name=kubernetes
      - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
      - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=true
      - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
      - --root-ca-file=/etc/kubernetes/pki/ca.crt
      - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.30.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /etc/pki
        name: etc-pki
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /etc/kubernetes/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/pki
        type: DirectoryOrCreate
      name: etc-pki
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://90c704b5ad08cfe20044c55eb37915d514956d53453ffdf3eb4acd65899da0c2
      image: registry.k8s.io/kube-controller-manager:v1.30.5
      imageID: registry.k8s.io/kube-controller-manager@sha256:bbd15d267294a22a20bf92a77b3ff0e1db7cfb2ce76991da2aaa03d09db3b645
      lastState:
        terminated:
          containerID: containerd://4dfe7bcbd4f76051797726ee7e1ed5862c427f6f549da1c4ceb7edfd3b666a44
          exitCode: 255
          finishedAt: "2024-10-30T15:01:22Z"
          reason: Unknown
          startedAt: "2024-10-30T14:55:38Z"
      name: kube-controller-manager
      ready: true
      restartCount: 10
      started: true
      state:
        running:
          startedAt: "2024-10-30T15:01:24Z"
    hostIP: 10.0.2.4
    hostIPs:
    - ip: 10.0.2.4
    phase: Running
    podIP: 10.0.2.4
    podIPs:
    - ip: 10.0.2.4
    qosClass: Burstable
    startTime: "2024-10-30T15:01:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-28T14:27:34Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 6f5646cb5f
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-kqdd5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 36fbba04-9ed7-4452-a16f-c08946dacdb0
    resourceVersion: "36928"
    uid: 60b103ab-2772-445a-bca0-b521d963389b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - controlplane
    containers:
    - command:
      - /bin/sh
      - -c
      - /usr/local/bin/kube-proxy --config=/var/lib/kube-proxy/config.conf --hostname-override=${NODE_NAME}
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.30.5
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s9hn5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-s9hn5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-28T14:27:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:02:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:02:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-28T14:27:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2583ade67aa96f062d3b193c9cf6d01bfc48c6619bbd41d14120764288573f4f
      image: registry.k8s.io/kube-proxy:v1.30.5
      imageID: registry.k8s.io/kube-proxy@sha256:fa20f91153b9e521ed2195d760af6ebf97fd8f5ee54e2164b7e6da6d0651fd13
      lastState:
        terminated:
          containerID: containerd://82feef0bf4051bfdf856f5ce958e225ffc98cd00df814a141dea4f91b22bcb8a
          exitCode: 137
          finishedAt: "2024-10-30T15:01:54Z"
          reason: Error
          startedAt: "2024-10-30T15:01:26Z"
      name: kube-proxy
      ready: true
      restartCount: 75
      started: true
      state:
        running:
          startedAt: "2024-10-30T15:02:10Z"
    hostIP: 10.0.2.4
    hostIPs:
    - ip: 10.0.2.4
    phase: Running
    podIP: 10.0.2.4
    podIPs:
    - ip: 10.0.2.4
    qosClass: BestEffort
    startTime: "2024-10-28T14:27:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-10-28T14:27:50Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 6f5646cb5f
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-wz2hr
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 36fbba04-9ed7-4452-a16f-c08946dacdb0
    resourceVersion: "36781"
    uid: c9c31552-fc4b-4d72-9e91-d7c90352283a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - node01
    containers:
    - command:
      - /bin/sh
      - -c
      - /usr/local/bin/kube-proxy --config=/var/lib/kube-proxy/config.conf --hostname-override=${NODE_NAME}
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.30.5
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nvvnq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: node01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-nvvnq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-28T14:27:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-28T14:27:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a6dceccbd3ea41d480700bc4858763c265d75ce6c29237e433bc2ac69c1ad99a
      image: registry.k8s.io/kube-proxy:v1.30.5
      imageID: registry.k8s.io/kube-proxy@sha256:fa20f91153b9e521ed2195d760af6ebf97fd8f5ee54e2164b7e6da6d0651fd13
      lastState:
        terminated:
          containerID: containerd://4bc6578c3a6e488c334ff0a935f143195a34a853aca8f5334197ac76a6fc2593
          exitCode: 255
          finishedAt: "2024-10-30T15:01:25Z"
          reason: Unknown
          startedAt: "2024-10-30T14:59:52Z"
      name: kube-proxy
      ready: true
      restartCount: 66
      started: true
      state:
        running:
          startedAt: "2024-10-30T15:01:28Z"
    hostIP: 10.0.2.6
    hostIPs:
    - ip: 10.0.2.6
    phase: Running
    podIP: 10.0.2.6
    podIPs:
    - ip: 10.0.2.6
    qosClass: BestEffort
    startTime: "2024-10-28T14:27:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 65515a55794e9be68cb14caa47f60130
      kubernetes.io/config.mirror: 65515a55794e9be68cb14caa47f60130
      kubernetes.io/config.seen: "2024-10-28T14:52:17.433172941Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2024-10-28T14:59:01Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-controlplane
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: controlplane
      uid: 4e254976-65b8-4e92-a058-ef8a18571c97
    resourceVersion: "36841"
    uid: 85ee6c4a-92b9-45c2-9e1f-1e9c9c42b286
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      image: registry.k8s.io/kube-scheduler:v1.30.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: controlplane
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T15:01:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f395e541e67c5990276e15ee5453c4e26ad000749e980f0b3f8f1a2631acf711
      image: registry.k8s.io/kube-scheduler:v1.30.5
      imageID: registry.k8s.io/kube-scheduler@sha256:62c91756a3c9b535ef97655a5bcca05e67e75b578f77fc907d8599a195946ee9
      lastState:
        terminated:
          containerID: containerd://cd41ce276d11263d7467fcc1fba369da0a4ab3d7447c72fd70eec9bfbf10265f
          exitCode: 255
          finishedAt: "2024-10-30T15:01:22Z"
          reason: Unknown
          startedAt: "2024-10-30T14:55:38Z"
      name: kube-scheduler
      ready: true
      restartCount: 10
      started: true
      state:
        running:
          startedAt: "2024-10-30T15:01:24Z"
    hostIP: 10.0.2.4
    hostIPs:
    - ip: 10.0.2.4
    phase: Running
    podIP: 10.0.2.4
    podIPs:
    - ip: 10.0.2.4
    qosClass: Burstable
    startTime: "2024-10-30T15:01:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2024-10-28T14:19:56Z"
    creationTimestamp: "2024-10-28T14:19:56Z"
    generateName: metrics-server-577f9f877d-
    labels:
      k8s-app: metrics-server
      pod-template-hash: 577f9f877d
    name: metrics-server-577f9f877d-gjzvd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-577f9f877d
      uid: fdb49cc7-58a2-48c4-a201-d08f63c864cc
    resourceVersion: "35938"
    uid: 574b6186-02b4-4b2a-b0c5-8c8c9571e9f7
  spec:
    containers:
    - args:
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      - --kubelet-insecure-tls
      image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kv8vm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-kv8vm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:54:52Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-28T14:19:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:43:40Z"
      message: 'containers with unready status: [metrics-server]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-30T14:43:40Z"
      message: 'containers with unready status: [metrics-server]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-28T14:19:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8ed4a8d725269c43b748f91d0440e29100f9250559b88b08da1117aa5dd7cd82
      image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
      imageID: registry.k8s.io/metrics-server/metrics-server@sha256:ffcb2bf004d6aa0a17d90e0247cf94f2865c8901dcab4427034c341951c239f9
      lastState: {}
      name: metrics-server
      ready: false
      restartCount: 10
      started: false
      state:
        terminated:
          containerID: containerd://8ed4a8d725269c43b748f91d0440e29100f9250559b88b08da1117aa5dd7cd82
          exitCode: 2
          finishedAt: "2024-10-30T14:54:52Z"
          reason: Error
          startedAt: "2024-10-30T14:54:22Z"
    hostIP: 10.0.2.6
    hostIPs:
    - ip: 10.0.2.6
    phase: Running
    qosClass: Burstable
    startTime: "2024-10-28T14:19:56Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: /
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-10-28T13:53:56Z"
    name: jenkins-service
    namespace: ci-cd
    resourceVersion: "7294"
    uid: 487543d1-bddf-4360-85b2-b06325b28887
  spec:
    clusterIP: 10.98.140.58
    clusterIPs:
    - 10.98.140.58
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32000
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: jenkins-server
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"postgres","namespace":"ci-cd"},"spec":{"internalTrafficPolicy":"Cluster","ports":[{"name":"postgres","nodePort":30432,"port":5432,"protocol":"TCP","targetPort":5432}],"selector":{"app":"postgres"},"sessionAffinity":"None","type":"NodePort"}}
    creationTimestamp: "2024-10-29T13:19:07Z"
    name: postgres
    namespace: ci-cd
    resourceVersion: "31636"
    uid: db718e87-1243-4187-bf50-ab75d7fdba14
  spec:
    clusterIP: 10.98.244.246
    clusterIPs:
    - 10.98.244.246
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: postgres
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: postgres
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "197"
    uid: 5fa1db4e-b032-4cb9-918b-b626a1a3bbce
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-10-28T15:38:26Z"
    name: gogs-svc
    namespace: development
    resourceVersion: "18128"
    uid: d6d6162b-d786-4445-a2a1-b3cec9e8dbc4
  spec:
    clusterIP: 10.105.57.36
    clusterIPs:
    - 10.105.57.36
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: ssh
      nodePort: 30022
      port: 10022
      protocol: TCP
      targetPort: 22
    - name: http
      nodePort: 30080
      port: 18080
      protocol: TCP
      targetPort: 3000
    selector:
      app: gogs
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-10-17T20:53:22Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "241"
    uid: 486ba766-d269-457f-a32f-48082eb9998e
  spec:
    clusterIP: 10.96.0.10
    clusterIPs:
    - 10.96.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2024-10-28T13:58:43Z"
    labels:
      k8s-app: metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "7725"
    uid: b3609f6b-4207-446c-bf73-c4033ee39e8b
  spec:
    clusterIP: 10.108.135.69
    clusterIPs:
    - 10.108.135.69
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2024-10-28T14:13:27Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "36929"
    uid: 36fbba04-9ed7-4452-a16f-c08946dacdb0
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - /usr/local/bin/kube-proxy --config=/var/lib/kube-proxy/config.conf --hostname-override=${NODE_NAME}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.30.5
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-28T13:52:06Z"
    generation: 1
    name: jenkins
    namespace: ci-cd
    resourceVersion: "36094"
    uid: da1f2d6d-a364-42ba-abd5-44db1228f772
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: jenkins-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: jenkins-server
      spec:
        containers:
        - image: jenkins/jenkins:lts
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: jenkins
          ports:
          - containerPort: 8080
            name: httpport
            protocol: TCP
          - containerPort: 50000
            name: jnlpport
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/jenkins_home
            name: jenkins-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        serviceAccount: jenkins-admin
        serviceAccountName: jenkins-admin
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-pv-claim
  status:
    conditions:
    - lastTransitionTime: "2024-10-28T15:12:39Z"
      lastUpdateTime: "2024-10-28T15:14:00Z"
      message: ReplicaSet "jenkins-68c8b7f55" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-10-30T14:56:09Z"
      lastUpdateTime: "2024-10-30T14:56:09Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-29T13:48:03Z"
    generation: 1
    name: postgres
    namespace: ci-cd
    resourceVersion: "36095"
    uid: 98e3109c-ad4c-4780-b5b7-652faee23a12
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: postgres
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-10-29T13:29:04Z"
        creationTimestamp: null
        labels:
          app: postgres
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_DB
                name: postgres-config
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_USER
                name: postgres-config
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: gogs-password
                name: postgres-secret
          image: postgres:13
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-storage
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/hostname: node01
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc-2
  status:
    conditions:
    - lastTransitionTime: "2024-10-29T13:48:03Z"
      lastUpdateTime: "2024-10-29T13:48:04Z"
      message: ReplicaSet "postgres-5fb45b6f79" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-10-30T14:56:09Z"
      lastUpdateTime: "2024-10-30T14:56:09Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-28T15:37:44Z"
    generation: 1
    name: gogs
    namespace: development
    resourceVersion: "36096"
    uid: 32952fc3-9ffe-457a-994f-42e32aa0cd80
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: gogs
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: gogs
          version: v1
      spec:
        containers:
        - env:
          - name: SOCAT_LINK
            value: "false"
          image: gogs/gogs:0.13
          imagePullPolicy: IfNotPresent
          name: gogs
          ports:
          - containerPort: 22
            name: ssh
            protocol: TCP
          - containerPort: 3000
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: gogs-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gogs-persistent-storage
          persistentVolumeClaim:
            claimName: gogs-pv-claim
  status:
    conditions:
    - lastTransitionTime: "2024-10-28T15:37:44Z"
      lastUpdateTime: "2024-10-28T15:43:35Z"
      message: ReplicaSet "gogs-6794df66fd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-10-30T14:56:09Z"
      lastUpdateTime: "2024-10-30T14:56:09Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-17T20:53:22Z"
    generation: 1
    labels:
      k8s-app: kube-dns
    name: coredns
    namespace: kube-system
    resourceVersion: "36097"
    uid: 1e23e3a1-170d-47a4-aa7a-29b818506326
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    conditions:
    - lastTransitionTime: "2024-10-17T21:19:05Z"
      lastUpdateTime: "2024-10-17T21:19:05Z"
      message: ReplicaSet "coredns-55cb58b774" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-10-30T14:56:09Z"
      lastUpdateTime: "2024-10-30T14:56:09Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 1
    replicas: 2
    unavailableReplicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"metrics-server"}},"strategy":{"rollingUpdate":{"maxUnavailable":0}},"template":{"metadata":{"labels":{"k8s-app":"metrics-server"}},"spec":{"containers":[{"args":["--cert-dir=/tmp","--secure-port=10250","--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname","--kubelet-use-node-status-port","--metric-resolution=15s"],"image":"registry.k8s.io/metrics-server/metrics-server:v0.7.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":"https","scheme":"HTTPS"},"periodSeconds":10},"name":"metrics-server","ports":[{"containerPort":10250,"name":"https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":"https","scheme":"HTTPS"},"initialDelaySeconds":20,"periodSeconds":10},"resources":{"requests":{"cpu":"100m","memory":"200Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-dir"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-cluster-critical","serviceAccountName":"metrics-server","volumes":[{"emptyDir":{},"name":"tmp-dir"}]}}}}
    creationTimestamp: "2024-10-28T13:58:43Z"
    generation: 3
    labels:
      k8s-app: metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "34030"
    uid: a73de489-42d6-4b92-a9cb-d374589f03ae
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-10-28T14:19:56Z"
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          - --kubelet-insecure-tls
          image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    conditions:
    - lastTransitionTime: "2024-10-28T13:58:43Z"
      lastUpdateTime: "2024-10-28T14:20:16Z"
      message: ReplicaSet "metrics-server-577f9f877d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-10-30T14:43:56Z"
      lastUpdateTime: "2024-10-30T14:43:56Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 3
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-28T13:52:06Z"
    generation: 1
    labels:
      app: jenkins-server
      pod-template-hash: 68c8b7f55
    name: jenkins-68c8b7f55
    namespace: ci-cd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: jenkins
      uid: da1f2d6d-a364-42ba-abd5-44db1228f772
    resourceVersion: "36093"
    uid: bf49a86a-9ac8-4868-8481-d07d4dcabda3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: jenkins-server
        pod-template-hash: 68c8b7f55
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: jenkins-server
          pod-template-hash: 68c8b7f55
      spec:
        containers:
        - image: jenkins/jenkins:lts
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: jenkins
          ports:
          - containerPort: 8080
            name: httpport
            protocol: TCP
          - containerPort: 50000
            name: jnlpport
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/jenkins_home
            name: jenkins-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        serviceAccount: jenkins-admin
        serviceAccountName: jenkins-admin
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-pv-claim
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-29T13:48:03Z"
    generation: 1
    labels:
      app: postgres
      pod-template-hash: 5fb45b6f79
    name: postgres-5fb45b6f79
    namespace: ci-cd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: postgres
      uid: 98e3109c-ad4c-4780-b5b7-652faee23a12
    resourceVersion: "36092"
    uid: 3286d3ec-d5be-421a-9ad7-d1f749620e3d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: postgres
        pod-template-hash: 5fb45b6f79
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-10-29T13:29:04Z"
        creationTimestamp: null
        labels:
          app: postgres
          pod-template-hash: 5fb45b6f79
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_DB
                name: postgres-config
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                key: POSTGRES_USER
                name: postgres-config
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: gogs-password
                name: postgres-secret
          image: postgres:13
          imagePullPolicy: IfNotPresent
          name: postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgres-storage
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/hostname: node01
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc-2
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-28T15:37:44Z"
    generation: 1
    labels:
      app: gogs
      pod-template-hash: 6794df66fd
      version: v1
    name: gogs-6794df66fd
    namespace: development
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gogs
      uid: 32952fc3-9ffe-457a-994f-42e32aa0cd80
    resourceVersion: "36091"
    uid: 31db25a0-1e96-4e03-a218-23c68ee7971c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: gogs
        pod-template-hash: 6794df66fd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: gogs
          pod-template-hash: 6794df66fd
          version: v1
      spec:
        containers:
        - env:
          - name: SOCAT_LINK
            value: "false"
          image: gogs/gogs:0.13
          imagePullPolicy: IfNotPresent
          name: gogs
          ports:
          - containerPort: 22
            name: ssh
            protocol: TCP
          - containerPort: 3000
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: gogs-persistent-storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: gogs-persistent-storage
          persistentVolumeClaim:
            claimName: gogs-pv-claim
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-17T20:53:38Z"
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 55cb58b774
    name: coredns-55cb58b774
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 1e23e3a1-170d-47a4-aa7a-29b818506326
    resourceVersion: "36090"
    uid: c0806995-a290-4ec4-bb6d-b88007426a48
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 55cb58b774
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 55cb58b774
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
        dnsPolicy: Default
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
  status:
    fullyLabeledReplicas: 2
    observedGeneration: 1
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2024-10-28T14:19:56Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 577f9f877d
    name: metrics-server-577f9f877d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: a73de489-42d6-4b92-a9cb-d374589f03ae
    resourceVersion: "34024"
    uid: fdb49cc7-58a2-48c4-a201-d08f63c864cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 577f9f877d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2024-10-28T14:19:56Z"
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 577f9f877d
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          - --kubelet-insecure-tls
          image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2024-10-28T14:04:28Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      pod-template-hash: b79d5c976
    name: metrics-server-b79d5c976
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: a73de489-42d6-4b92-a9cb-d374589f03ae
    resourceVersion: "10064"
    uid: 192e688a-6551-4b56-a5be-e9d7a21674a8
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: b79d5c976
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: b79d5c976
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          - --kubelet-insecure-tls
          image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-10-28T13:58:43Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      pod-template-hash: d5865ff47
    name: metrics-server-d5865ff47
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: a73de489-42d6-4b92-a9cb-d374589f03ae
    resourceVersion: "8399"
    uid: 044da1e2-136c-430e-9b69-cdadf7273110
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: d5865ff47
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: d5865ff47
      spec:
        containers:
        - args:
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
  status:
    observedGeneration: 2
    replicas: 0
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-28T13:41:41Z"
    name: kube-root-ca.crt
    namespace: ci-cd
    resourceVersion: "6149"
    uid: 8048d416-0f92-487a-9dbe-8854ad4405bc
- apiVersion: v1
  data:
    POSTGRES_DB: gogs_db
    POSTGRES_PASSWORD: $(POSTGRES_PASSWORD)
    POSTGRES_USER: gogs
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-29T13:19:07Z"
    name: postgres-config
    namespace: ci-cd
    resourceVersion: "21050"
    uid: db07d6be-5913-4c75-b019-7ada29c45548
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: kube-root-ca.crt
    namespace: default
    resourceVersion: "331"
    uid: 4c461a1c-f45f-4a62-bd13-512899afc64a
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-28T13:41:56Z"
    name: kube-root-ca.crt
    namespace: development
    resourceVersion: "6175"
    uid: 1d157d31-4b73-442b-aa27-bc8d914b499a
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: kube-root-ca.crt
    namespace: kube-node-lease
    resourceVersion: "333"
    uid: 0a3668eb-f16c-461e-94a7-5d6342417358
- apiVersion: v1
  data:
    kubeconfig: |
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJWlVlQ2Y1NURsZzh3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFd01UY3lNRFE0TVRkYUZ3MHpOREV3TVRVeU1EVXpNVGRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNnQjVNcFM1VjBxcFdPc29kT0dhQUVWZmx3NHA1TG4xaDhSUkVjWXpNazZIRkpQcHZseDBVNFdqbFQKaDRoL3ZTUVYrTm95UVdYNXB6eFZBc2pGbXYxS3RPL2JYRlZ3dzhsSVRZZW9RaXpxUndML0JOVTBBTTNKYmJNUQpPWmRIZkRRWmo0S2gvRjBmUjRPaDhyYjc4c1RzZFB5MUpFcWppVVFlR2hTeHNVdm5FZkR3S2IxeFc3RStvVGRaCm1GakcyMFIxSm95aXJOUG50c1QybUpOSWtsZGVTM01NZlpDZnVSTHorZzcyQWJFcXBob2hydVUxaDAzRFlNVnoKeWczM2VWUlRKaklXdC9McXlqYi80VXVtRDBnN3RxeTVjTkdtQlFLdWNGeEQ2bWNUSFJEQ0h5Y0ZVQWluM2NmYwpUN29MVTBPYUxoVVdVeGJvVStIeUJzUGdXcURoQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTZ3ZtSFlkV0NKN1lwWk1DU1M0R011R0xvSklEQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQW1ERHdYalJXeApuYUw5ekZ1ZmlhbFhlTHo3NnVXYVVqTVc5eExpdkhoN1BSVGs3TWsvVzRjTzhNVi9QdWM1QW9tVytLNFhqYnZyCno1aEVjWElmR3lnK3pSVXAvOG1HV2F1MGxQa3d4S2pvNlZoTUljNkp1MzVsZlh4YzJNRUhBbCtmeWNicHdlQnQKVlBIaTVlWGNrc1NWT3R1Vy8rNHF4WHZETkMzZld3VGJscHFzaCtLdnN1WXVJWEJ6T3pLN1lrMmFBbUVHN2x6awpDOWgxckhRUmM4TEFzMzNHczhyY3hNYkZNdlVQVXhFcFg2VUNvUGFRMXo5ZlZLRWFsTHQxc2dLZW5OSERvRmsrCk5EMDBLaGxaRVlsejB5cHF2bTN4d3R4VXQyTWhob3NwYUpYRG5DcUVtV0xUSjZUc0o0NXpoSjJtU3JuWWo2amkKa1k1ZmZKVnQ2UzBqCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          server: https://10.0.2.4:6443
        name: ""
      contexts: null
      current-context: ""
      kind: Config
      preferences: {}
      users: null
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: cluster-info
    namespace: kube-public
    resourceVersion: "5461"
    uid: 7b57bf4d-e6f5-4a2f-880a-64f9b405f662
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: kube-root-ca.crt
    namespace: kube-public
    resourceVersion: "336"
    uid: f637c618-4f0c-418b-aa36-3864b21089e3
- apiVersion: v1
  data:
    Corefile: |
      .:53 {
          errors
          health {
             lameduck 5s
          }
          ready
          kubernetes cluster.local in-addr.arpa ip6.arpa {
             pods insecure
             fallthrough in-addr.arpa ip6.arpa
             ttl 30
          }
          prometheus :9153
          forward . /etc/resolv.conf {
             max_concurrent 1000
          }
          cache 30
          loop
          reload
          loadbalance
      }
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: coredns
    namespace: kube-system
    resourceVersion: "220"
    uid: 28ee78ee-b9ac-43e5-a341-b9d13c16462b
- apiVersion: v1
  data:
    client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
    requestheader-allowed-names: '["front-proxy-client"]'
    requestheader-client-ca-file: |
      -----BEGIN CERTIFICATE-----
      MIIDETCCAfmgAwIBAgIILEx8NBFks+kwDQYJKoZIhvcNAQELBQAwGTEXMBUGA1UE
      AxMOZnJvbnQtcHJveHktY2EwHhcNMjQxMDE3MjA0ODE3WhcNMzQxMDE1MjA1MzE3
      WjAZMRcwFQYDVQQDEw5mcm9udC1wcm94eS1jYTCCASIwDQYJKoZIhvcNAQEBBQAD
      ggEPADCCAQoCggEBALdJ5d55+S0tKKwSYXokNoLko26JqKlRK1H+SSxksKR+oJPg
      Kyq4g1Xc9V0/iLMIncJ0rgt12AmS94wf0J4HBKBry1WHKYOCdqpV2nD2a0QZGqcH
      5gaytF++ASxd1DMwaxnD0oiF/siBt6l9jbqGjPjWBJZ7/ggS86xtx1BJ3QMyY9+M
      2fiksOoK4+SDydrzaOJZ9JLrPztNryN19HuVqImIeDYfi1nyOR6CP2ZrveKRozM5
      lMm7If3ec98/3oOzSXCYHMH4rlKfGUSmmMctMvY16i6KTBxx79DiQtWMj/0olwWq
      Y7Cu1DSKVicvlX2GhXNKQJCN23TIZ3MJeOM3sckCAwEAAaNdMFswDgYDVR0PAQH/
      BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFCDi5Za2vb44d61DKyvG
      J7eewRjHMBkGA1UdEQQSMBCCDmZyb250LXByb3h5LWNhMA0GCSqGSIb3DQEBCwUA
      A4IBAQBn75kT+EaWbd0tgQwZxNIfmEhBZph44cddLh+5qRQEYxfZioc0rgHobpfM
      Iu6giSjKxqWp/lacbrJTavWwvS+fvHy5UOpM2oFyAA/QOQP5OMTqFhh9xDxHkIWM
      h1VgGfhMHs9JqzXnzR+nJ/1ntdcgIsjmz5rUKwAD4hlrkzcR1oZI3RfrjhElhdKo
      d4JZAx9j1atyBhkH6uKdLQF5DQDvKO2y+m8UhzDtl0CSwtYVjL8TFb4abjJZL+WH
      HH1zKN26LvusXYUoCV/+DtP5ojNj8WY/Z32igkd6qhKf+PF4w6wW6hry6qosOY9N
      npLinnoPAJJYdnOVMhoTOB0zWex2
      -----END CERTIFICATE-----
    requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
    requestheader-group-headers: '["X-Remote-Group"]'
    requestheader-username-headers: '["X-Remote-User"]'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-17T20:53:20Z"
    name: extension-apiserver-authentication
    namespace: kube-system
    resourceVersion: "27"
    uid: 9b9d6cac-a01e-4913-a91a-ef1f4dd442a4
- apiVersion: v1
  data:
    since: "2024-10-17"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-17T20:53:20Z"
    name: kube-apiserver-legacy-service-account-token-tracking
    namespace: kube-system
    resourceVersion: "53"
    uid: 82594119-782f-4741-b1ec-2bd609f05387
- apiVersion: v1
  data:
    config.conf: |-
      apiVersion: kubeproxy.config.k8s.io/v1alpha1
      bindAddress: 0.0.0.0
      bindAddressHardFail: false
      clientConnection:
        acceptContentTypes: ""
        burst: 0
        contentType: ""
        kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
        qps: 0
      clusterCIDR: 10.244.0.0/16
      configSyncPeriod: 0s
      conntrack:
        maxPerCore: null
        min: null
        tcpBeLiberal: false
        tcpCloseWaitTimeout: null
        tcpEstablishedTimeout: null
        udpStreamTimeout: 0s
        udpTimeout: 0s
      detectLocal:
        bridgeInterface: ""
        interfaceNamePrefix: ""
      detectLocalMode: ""
      enableProfiling: false
      healthzBindAddress: ""
      hostnameOverride: ""
      iptables:
        localhostNodePorts: null
        masqueradeAll: false
        masqueradeBit: null
        minSyncPeriod: 0s
        syncPeriod: 0s
      ipvs:
        excludeCIDRs: null
        minSyncPeriod: 0s
        scheduler: ""
        strictARP: false
        syncPeriod: 0s
        tcpFinTimeout: 0s
        tcpTimeout: 0s
        udpTimeout: 0s
      kind: KubeProxyConfiguration
      logging:
        flushFrequency: 0
        options:
          json:
            infoBufferSize: "0"
          text:
            infoBufferSize: "0"
        verbosity: 0
      metricsBindAddress: ""
      mode: ""
      nftables:
        masqueradeAll: false
        masqueradeBit: null
        minSyncPeriod: 0s
        syncPeriod: 0s
      nodePortAddresses: null
      oomScoreAdj: null
      portRange: ""
      showHiddenMetricsForVersion: ""
      winkernel:
        enableDSR: false
        forwardHealthCheckVip: false
        networkName: ""
        rootHnsEndpointName: ""
        sourceVip: ""
    kubeconfig.conf: |-
      apiVersion: v1
      kind: Config
      clusters:
      - cluster:
          certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          server: https://10.0.2.4:6443
        name: default
      contexts:
      - context:
          cluster: default
          namespace: default
          user: default
        name: default
      current-context: default
      users:
      - name: default
        user:
          tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
  kind: ConfigMap
  metadata:
    annotations:
      kubeadm.kubernetes.io/component-config.hash: sha256:708b51307ce9ced406cf69682c4874e7defba4a7ab71718ff08a259e37d1f182
    creationTimestamp: "2024-10-17T20:53:22Z"
    labels:
      app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "242"
    uid: 4b06b821-09a7-4c49-b9c5-3deb0b9c3cc9
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: kube-root-ca.crt
    namespace: kube-system
    resourceVersion: "338"
    uid: bf45027c-190c-4e22-8702-ca917888705c
- apiVersion: v1
  data:
    ClusterConfiguration: |
      apiServer:
        timeoutForControlPlane: 4m0s
      apiVersion: kubeadm.k8s.io/v1beta3
      certificatesDir: /etc/kubernetes/pki
      clusterName: kubernetes
      controllerManager: {}
      dns: {}
      etcd:
        local:
          dataDir: /var/lib/etcd
      imageRepository: registry.k8s.io
      kind: ClusterConfiguration
      kubernetesVersion: v1.30.5
      networking:
        dnsDomain: cluster.local
        podSubnet: 10.244.0.0/16
        serviceSubnet: 10.96.0.0/12
      scheduler: {}
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm-config
    namespace: kube-system
    resourceVersion: "202"
    uid: 2f981d79-413e-4a76-a118-53d3de416afc
- apiVersion: v1
  data:
    kubelet: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      authentication:
        anonymous:
          enabled: false
        webhook:
          cacheTTL: 0s
          enabled: true
        x509:
          clientCAFile: /etc/kubernetes/pki/ca.crt
      authorization:
        mode: Webhook
        webhook:
          cacheAuthorizedTTL: 0s
          cacheUnauthorizedTTL: 0s
      cgroupDriver: systemd
      clusterDNS:
      - 10.96.0.10
      clusterDomain: cluster.local
      containerRuntimeEndpoint: ""
      cpuManagerReconcilePeriod: 0s
      evictionPressureTransitionPeriod: 0s
      fileCheckFrequency: 0s
      healthzBindAddress: 127.0.0.1
      healthzPort: 10248
      httpCheckFrequency: 0s
      imageMaximumGCAge: 0s
      imageMinimumGCAge: 0s
      kind: KubeletConfiguration
      logging:
        flushFrequency: 0
        options:
          json:
            infoBufferSize: "0"
          text:
            infoBufferSize: "0"
        verbosity: 0
      memorySwap: {}
      nodeStatusReportFrequency: 0s
      nodeStatusUpdateFrequency: 0s
      resolvConf: /run/systemd/resolve/resolv.conf
      rotateCertificates: true
      runtimeRequestTimeout: 0s
      shutdownGracePeriod: 0s
      shutdownGracePeriodCriticalPods: 0s
      staticPodPath: /etc/kubernetes/manifests
      streamingConnectionIdleTimeout: 0s
      syncFrequency: 0s
      volumeStatsAggPeriod: 0s
  kind: ConfigMap
  metadata:
    annotations:
      kubeadm.kubernetes.io/component-config.hash: sha256:14a463ee2caafeaa2b6d58bb8c225fb8e9e4509ed1a77d8c55a943bc7d89f7ac
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubelet-config
    namespace: kube-system
    resourceVersion: "205"
    uid: 6b9e6586-d01a-4417-9e07-eea6ebc4cecc
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      kube-peers.weave.works/peers: '{"Peers":[{"PeerName":"a2:f7:81:4f:de:55","NodeName":"controlplane"},{"PeerName":"1e:d8:f4:05:03:fc","NodeName":"node01"}]}'
    creationTimestamp: "2024-10-30T14:46:37Z"
    name: weave-net
    namespace: kube-system
    resourceVersion: "34678"
    uid: f811686b-9f1d-4499-b4fe-d8c38cadc6db
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-28T13:42:13Z"
    name: kube-root-ca.crt
    namespace: pre-production
    resourceVersion: "6212"
    uid: 99ff9e2e-a76e-4dde-92c4-6ef5dbbe2ff0
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-28T13:42:21Z"
    name: kube-root-ca.crt
    namespace: production
    resourceVersion: "6226"
    uid: 0de1793d-f554-478c-accc-338fc377058f
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIZUeCf55Dlg8wDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNDEwMTcyMDQ4MTdaFw0zNDEwMTUyMDUzMTdaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQCgB5MpS5V0qpWOsodOGaAEVflw4p5Ln1h8RREcYzMk6HFJPpvlx0U4WjlT
      h4h/vSQV+NoyQWX5pzxVAsjFmv1KtO/bXFVww8lITYeoQizqRwL/BNU0AM3JbbMQ
      OZdHfDQZj4Kh/F0fR4Oh8rb78sTsdPy1JEqjiUQeGhSxsUvnEfDwKb1xW7E+oTdZ
      mFjG20R1JoyirNPntsT2mJNIkldeS3MMfZCfuRLz+g72AbEqphohruU1h03DYMVz
      yg33eVRTJjIWt/Lqyjb/4UumD0g7tqy5cNGmBQKucFxD6mcTHRDCHycFUAin3cfc
      T7oLU0OaLhUWUxboU+HyBsPgWqDhAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSgvmHYdWCJ7YpZMCSS4GMuGLoJIDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAmDDwXjRWx
      naL9zFufialXeLz76uWaUjMW9xLivHh7PRTk7Mk/W4cO8MV/Puc5AomW+K4Xjbvr
      z5hEcXIfGyg+zRUp/8mGWau0lPkwxKjo6VhMIc6Ju35lfXxc2MEHAl+fycbpweBt
      VPHi5eXcksSVOtuW/+4qxXvDNC3fWwTblpqsh+KvsuYuIXBzOzK7Yk2aAmEG7lzk
      C9h1rHQRc8LAs33Gs8rcxMbFMvUPUxEpX6UCoPaQ1z9fVKEalLt1sgKenNHDoFk+
      ND00KhlZEYlz0ypqvm3xwtxUt2MhhospaJXDnCqEmWLTJ6TsJ45zhJ2mSrnYj6ji
      kY5ffJVt6S0j
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-10-28T13:42:05Z"
    name: kube-root-ca.crt
    namespace: testing
    resourceVersion: "6195"
    uid: 9d4da6cc-4e69-4410-9a98-854071621873
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: v1
  data:
    gogs-password: Z29nc19wYXNzd29yZA==
    postgres-password: c2VjdXJlX3Bhc3N3b3Jk
  kind: Secret
  metadata:
    creationTimestamp: "2024-10-29T13:19:07Z"
    name: postgres-secret
    namespace: ci-cd
    resourceVersion: "21047"
    uid: cc7ac3b6-379d-49ef-97b0-527bd9fa8968
  type: Opaque
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    creationTimestamp: "2024-10-28T15:28:36Z"
    generation: 1
    name: gogs-ingress
    namespace: ci-cd
    resourceVersion: "17158"
    uid: 63dfd207-d655-48a4-933e-0aea76d80b12
  spec:
    rules:
    - host: gogs.local
      http:
        paths:
        - backend:
            service:
              name: gogs-svc
              port:
                number: 18080
          path: /
          pathType: Prefix
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: "2024-10-28T15:12:20Z"
    finalizers:
    - kubernetes.io/pvc-protection
    name: jenkins-pv-claim
    namespace: ci-cd
    resourceVersion: "15578"
    uid: 4817bb6b-0ee3-4a19-96d2-d8a1e9be0c0e
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 3Gi
    storageClassName: local-storage
    volumeMode: Filesystem
    volumeName: jenkins-pv-volume
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 10Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: "2024-10-29T13:46:10Z"
    finalizers:
    - kubernetes.io/pvc-protection
    name: postgres-pvc-2
    namespace: ci-cd
    resourceVersion: "24087"
    uid: b62492b9-85f4-453c-b964-0c08126c4de2
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
    volumeMode: Filesystem
    volumeName: postgres-pv-2
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 10Gi
    phase: Bound
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: "2024-10-28T15:37:44Z"
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: gogs
    name: gogs-pv-claim
    namespace: development
    resourceVersion: "18901"
    uid: 5730d641-e5a2-4645-b238-11d443501cbe
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
    volumeMode: Filesystem
    volumeName: gogs-pv
  status:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 2Gi
    phase: Bound
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    annotations:
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: "2024-10-28T15:43:22Z"
    finalizers:
    - kubernetes.io/pv-protection
    labels:
      type: local
    name: gogs-pv
    resourceVersion: "18899"
    uid: a850a213-ea03-4065-8390-cc1a15eda266
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 2Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: gogs-pv-claim
      namespace: development
      resourceVersion: "18030"
      uid: 5730d641-e5a2-4645-b238-11d443501cbe
    hostPath:
      path: /mnt/data/gogs
      type: ""
    persistentVolumeReclaimPolicy: Retain
    volumeMode: Filesystem
  status:
    lastPhaseTransitionTime: "2024-10-28T15:43:29Z"
    phase: Bound
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    creationTimestamp: "2024-10-28T15:12:20Z"
    finalizers:
    - kubernetes.io/pv-protection
    labels:
      type: local
    name: jenkins-pv-volume
    resourceVersion: "15574"
    uid: ec5d57de-2e4e-4c51-8a5a-019e1ac4160e
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 10Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: jenkins-pv-claim
      namespace: ci-cd
      resourceVersion: "15572"
      uid: 4817bb6b-0ee3-4a19-96d2-d8a1e9be0c0e
    local:
      path: /mnt
    nodeAffinity:
      required:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - node01
    persistentVolumeReclaimPolicy: Retain
    storageClassName: local-storage
    volumeMode: Filesystem
  status:
    lastPhaseTransitionTime: "2024-10-28T15:12:20Z"
    phase: Bound
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    annotations:
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: "2024-10-29T13:38:26Z"
    finalizers:
    - kubernetes.io/pv-protection
    name: postgres-pv-2
    resourceVersion: "24086"
    uid: c65c0525-3442-495a-9c5e-f48bb35c3d8b
  spec:
    accessModes:
    - ReadWriteOnce
    capacity:
      storage: 10Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: postgres-pvc-2
      namespace: ci-cd
      resourceVersion: "24084"
      uid: b62492b9-85f4-453c-b964-0c08126c4de2
    hostPath:
      path: /mnt/data/post
      type: ""
    persistentVolumeReclaimPolicy: Retain
    volumeMode: Filesystem
  status:
    lastPhaseTransitionTime: "2024-10-29T13:46:10Z"
    phase: Bound
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    creationTimestamp: "2024-10-28T13:51:04Z"
    name: local-storage
    resourceVersion: "7014"
    uid: 8ecb8f2f-e0ce-4e79-a725-dca1523e9260
  provisioner: kubernetes.io/no-provisioner
  reclaimPolicy: Delete
  volumeBindingMode: WaitForFirstConsumer
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-28T13:41:41Z"
    name: default
    namespace: ci-cd
    resourceVersion: "6150"
    uid: aac2346a-9ec1-4965-94ae-3ba37ac712e6
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-28T13:48:31Z"
    name: jenkins-admin
    namespace: ci-cd
    resourceVersion: "6786"
    uid: d83f40a5-80a7-4fd7-b7d2-060bec9f8af9
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: default
    namespace: default
    resourceVersion: "320"
    uid: 305adcf0-ddee-46e7-a932-4d8f17c77d41
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-28T13:41:56Z"
    name: default
    namespace: development
    resourceVersion: "6176"
    uid: b0a50374-b233-4243-9440-a799a94f9d14
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: default
    namespace: kube-node-lease
    resourceVersion: "321"
    uid: c87f8d4a-ff15-4550-a33a-6eedeae30cf8
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: default
    namespace: kube-public
    resourceVersion: "323"
    uid: ceb79f5f-e254-42bf-8057-2bc17e3de4c2
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:27Z"
    name: attachdetach-controller
    namespace: kube-system
    resourceVersion: "284"
    uid: 9179e8f5-6445-4ba1-b718-14e7835f341c
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:27Z"
    name: bootstrap-signer
    namespace: kube-system
    resourceVersion: "286"
    uid: 33e40d8a-c73f-479c-8b89-c7e50e20e29d
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:27Z"
    name: certificate-controller
    namespace: kube-system
    resourceVersion: "283"
    uid: ef2938d6-d5ea-4b59-9273-c625e92c60df
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:28Z"
    name: clusterrole-aggregation-controller
    namespace: kube-system
    resourceVersion: "288"
    uid: 1806cc61-4485-4cd0-98f2-52f5c0fcb16e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: coredns
    namespace: kube-system
    resourceVersion: "236"
    uid: c3a74b36-262c-4258-bc2b-c8893fff8759
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:27Z"
    name: cronjob-controller
    namespace: kube-system
    resourceVersion: "282"
    uid: e44fe1ad-e660-4fa9-91ac-aa3399efb5d8
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: daemon-set-controller
    namespace: kube-system
    resourceVersion: "264"
    uid: 1a257743-f735-4bd1-bcd4-455a60bf83d8
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: default
    namespace: kube-system
    resourceVersion: "325"
    uid: 294e67cd-6a63-4fe9-b17c-6a007d060951
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: deployment-controller
    namespace: kube-system
    resourceVersion: "260"
    uid: f1b0c75f-09ba-4118-b138-fb68b3554d39
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:26Z"
    name: disruption-controller
    namespace: kube-system
    resourceVersion: "275"
    uid: bbc44e1c-b000-48cc-982b-0c5ba32516a1
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:28Z"
    name: endpoint-controller
    namespace: kube-system
    resourceVersion: "289"
    uid: e687c872-ca1b-4196-a450-e40de7caf52a
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: endpointslice-controller
    namespace: kube-system
    resourceVersion: "316"
    uid: af2d5f8f-5959-4c5d-b799-b531adad032c
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: endpointslicemirroring-controller
    namespace: kube-system
    resourceVersion: "268"
    uid: a82e8510-42af-4a60-8449-a09b738ab282
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:25Z"
    name: ephemeral-volume-controller
    namespace: kube-system
    resourceVersion: "271"
    uid: a8015bec-b2de-4a57-83af-ddb617039483
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: expand-controller
    namespace: kube-system
    resourceVersion: "266"
    uid: ef9bd87f-4edc-4515-bff0-7046f2b2f1fe
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: generic-garbage-collector
    namespace: kube-system
    resourceVersion: "269"
    uid: 19b579e3-6cca-4c97-a40e-db96dd4de109
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:25Z"
    name: horizontal-pod-autoscaler
    namespace: kube-system
    resourceVersion: "274"
    uid: 02e2800d-4b3d-4fd3-8a94-687aaf74f792
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:25Z"
    name: job-controller
    namespace: kube-system
    resourceVersion: "273"
    uid: cc7e52a2-0be9-4672-b270-300dda8e12a8
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-28T14:28:30Z"
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "10946"
    uid: 77c875c5-55d2-4552-9146-2ba84e9e8ff4
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: legacy-service-account-token-cleaner
    namespace: kube-system
    resourceVersion: "315"
    uid: 65768377-5ef9-4aa5-b87a-083e73c6c389
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"metrics-server","namespace":"kube-system"}}
    creationTimestamp: "2024-10-17T20:57:28Z"
    labels:
      k8s-app: metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "709"
    uid: e08e7e93-881d-4c08-916c-10064364a884
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:27Z"
    name: namespace-controller
    namespace: kube-system
    resourceVersion: "285"
    uid: 0b4a96d1-3a30-4b9d-92d3-401821573283
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: node-controller
    namespace: kube-system
    resourceVersion: "261"
    uid: fc144d0e-523c-4cb8-a031-4e50f177d103
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:26Z"
    name: persistent-volume-binder
    namespace: kube-system
    resourceVersion: "277"
    uid: 3020abba-a9ae-49a4-9d4b-7afc721671bc
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:26Z"
    name: pod-garbage-collector
    namespace: kube-system
    resourceVersion: "280"
    uid: 435bdfb5-c907-43ce-815a-3b3bc65f0fee
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: pv-protection-controller
    namespace: kube-system
    resourceVersion: "313"
    uid: 72e7ee1d-43bc-415e-86c3-b9fee08444ef
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:38Z"
    name: pvc-protection-controller
    namespace: kube-system
    resourceVersion: "314"
    uid: fb838262-63dc-49cd-a1b9-62024b9de1d6
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:28Z"
    name: replicaset-controller
    namespace: kube-system
    resourceVersion: "291"
    uid: ebb1c100-e06c-4918-8040-ddac0394ec01
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:28Z"
    name: replication-controller
    namespace: kube-system
    resourceVersion: "290"
    uid: a8ea8660-96c9-4839-b6bc-da78fa04a9fe
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:25Z"
    name: resourcequota-controller
    namespace: kube-system
    resourceVersion: "272"
    uid: e7bbd3ae-ebc7-415d-b56f-940d80c71d72
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:25Z"
    name: root-ca-cert-publisher
    namespace: kube-system
    resourceVersion: "270"
    uid: 31d2eacc-2d58-4669-9847-9faa86628ed9
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: service-account-controller
    namespace: kube-system
    resourceVersion: "263"
    uid: b1cdf2f6-6374-4ce7-8c30-7fa1a3b7cdf3
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:27Z"
    name: service-controller
    namespace: kube-system
    resourceVersion: "287"
    uid: d24e0555-8206-40ee-ad47-de67828c5b6b
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:26Z"
    name: statefulset-controller
    namespace: kube-system
    resourceVersion: "281"
    uid: 5879f4b7-8827-4580-a8d7-8e0c3eca587e
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:26Z"
    name: token-cleaner
    namespace: kube-system
    resourceVersion: "276"
    uid: e37d2e3f-7b90-4310-a1b0-6be013d6f505
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: ttl-after-finished-controller
    namespace: kube-system
    resourceVersion: "267"
    uid: 01e774ab-5a9b-46fb-ae94-0f762d40c1f7
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: ttl-controller
    namespace: kube-system
    resourceVersion: "265"
    uid: 7029269d-aaa2-440f-bfab-78413bffca79
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-17T20:53:24Z"
    name: validatingadmissionpolicy-status-controller
    namespace: kube-system
    resourceVersion: "262"
    uid: 61ade4c6-248f-4266-8b35-6d5ad4c2e0bd
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-28T13:42:13Z"
    name: default
    namespace: pre-production
    resourceVersion: "6211"
    uid: b2edfedd-b415-43cf-b77d-b059d76f2dfa
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-28T13:42:21Z"
    name: default
    namespace: production
    resourceVersion: "6225"
    uid: 89440252-db98-4463-b30a-d3c5e6c90031
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2024-10-28T13:42:05Z"
    name: default
    namespace: testing
    resourceVersion: "6196"
    uid: 53c37e4e-ac97-4ddd-b27e-b8996fb6bd51
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:bootstrap-signer-clusterinfo
    namespace: kube-public
    resourceVersion: "218"
    uid: f0b35d2b-e1d3-44a7-863c-a6ee5142e278
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - cluster-info
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-public
    resourceVersion: "188"
    uid: f3a8957d-973c-4238-a20d-701520b2e88c
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - cluster-info
    resources:
    - configmaps
    verbs:
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: extension-apiserver-authentication-reader
    namespace: kube-system
    resourceVersion: "182"
    uid: 80c7b069-9d3d-4163-b2db-0945dc85a260
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - extension-apiserver-authentication
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: "2024-10-17T20:53:23Z"
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "246"
    uid: 453d15ef-6a7a-4ee3-8003-96ee9ae88557
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kube-proxy
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:kubelet-config
    namespace: kube-system
    resourceVersion: "206"
    uid: 32db0f98-fa55-49e0-9089-5bfb3f41761e
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kubelet-config
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:nodes-kubeadm-config
    namespace: kube-system
    resourceVersion: "203"
    uid: a339cbbc-c13d-4f3a-b839-2d292f79dfaa
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kubeadm-config
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-controller-manager
    namespace: kube-system
    resourceVersion: "186"
    uid: a800c1c4-f838-4f70-bcd9-a8579c520bd6
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - kube-controller-manager
    resources:
    - configmaps
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-scheduler
    namespace: kube-system
    resourceVersion: "187"
    uid: b2ae7fd1-ccfe-4351-880f-1f7d2ffe509e
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - watch
  - apiGroups:
    - ""
    resourceNames:
    - kube-scheduler
    resources:
    - configmaps
    verbs:
    - get
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-system
    resourceVersion: "183"
    uid: ef9dd8db-db79-4b9e-886b-448037256a99
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cloud-provider
    namespace: kube-system
    resourceVersion: "184"
    uid: 40eceebf-2988-458e-af6d-dec0090eb695
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:token-cleaner
    namespace: kube-system
    resourceVersion: "185"
    uid: ac2ba366-84dc-43cf-a33d-f57092a851d4
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:bootstrap-signer-clusterinfo
    namespace: kube-public
    resourceVersion: "219"
    uid: 6096dff5-69e6-4a9f-b5f5-fc6359b388c6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubeadm:bootstrap-signer-clusterinfo
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:anonymous
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-public
    resourceVersion: "189"
    uid: 8b97e035-303a-4744-bfe0-a98da5ed5450
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:bootstrap-signer
  subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"extension-apiserver-authentication-reader","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"extension-apiserver-authentication-reader"},"subjects":[{"kind":"ServiceAccount","name":"kube-scheduler","namespace":"kube-system"}]}
    creationTimestamp: "2024-10-28T14:54:38Z"
    name: extension-apiserver-authentication-reader
    namespace: kube-system
    resourceVersion: "13895"
    uid: b4b13822-f194-4f34-8fc6-54d9651aedf8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - kind: ServiceAccount
    name: kube-scheduler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:23Z"
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "247"
    uid: 6caccd41-4db8-4bff-a619-bb2736226241
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kube-proxy
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:kubelet-config
    namespace: kube-system
    resourceVersion: "207"
    uid: 575eaf7b-a296-49b1-97e2-d970be68f5c8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubeadm:kubelet-config
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:nodes-kubeadm-config
    namespace: kube-system
    resourceVersion: "204"
    uid: 20ea3878-ffed-4178-a63e-e95fe23c75dd
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: kubeadm:nodes-kubeadm-config
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"metrics-server-auth-reader","namespace":"kube-system"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"extension-apiserver-authentication-reader"},"subjects":[{"kind":"ServiceAccount","name":"metrics-server","namespace":"kube-system"}]}
    creationTimestamp: "2024-10-17T20:57:28Z"
    labels:
      k8s-app: metrics-server
    name: metrics-server-auth-reader
    namespace: kube-system
    resourceVersion: "715"
    uid: 7fcdd697-8e06-4177-a252-24bd142ae2d6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - kind: ServiceAccount
    name: metrics-server
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::extension-apiserver-authentication-reader
    namespace: kube-system
    resourceVersion: "190"
    uid: 5856aff9-6592-4d71-a0c7-37b7583c6e0d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: extension-apiserver-authentication-reader
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-controller-manager
    namespace: kube-system
    resourceVersion: "191"
    uid: f82a7a9a-a6ad-4e80-ac3c-faa56249b3d6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system::leader-locking-kube-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
  - kind: ServiceAccount
    name: kube-controller-manager
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system::leader-locking-kube-scheduler
    namespace: kube-system
    resourceVersion: "192"
    uid: f13bc541-084b-490a-9c7f-3883676f4ed6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system::leader-locking-kube-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
  - kind: ServiceAccount
    name: kube-scheduler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:bootstrap-signer
    namespace: kube-system
    resourceVersion: "193"
    uid: d76b4757-64b2-4516-b3a3-cd8d39be2b9e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:bootstrap-signer
  subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cloud-provider
    namespace: kube-system
    resourceVersion: "194"
    uid: 0abceb49-8ebe-499d-8550-bbba4d5d6676
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:cloud-provider
  subjects:
  - kind: ServiceAccount
    name: cloud-provider
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:token-cleaner
    namespace: kube-system
    resourceVersion: "195"
    uid: 61ae2114-b803-4901-949a-64273b6d15b8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: system:controller:token-cleaner
  subjects:
  - kind: ServiceAccount
    name: token-cleaner
    namespace: kube-system
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: admin
    resourceVersion: "716"
    uid: 2b530eca-ddf0-4cf3-9f2f-80eb0f1fe24f
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: cluster-admin
    resourceVersion: "73"
    uid: 4d1e1dc6-01e9-4aea-984f-dcb38b584bfe
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: edit
    resourceVersion: "713"
    uid: 0893e126-09e9-47cf-a05b-6f26335fc15d
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2024-10-28T13:48:31Z"
    name: jenkins-admin
    resourceVersion: "6785"
    uid: c565004c-b262-4e55-afb1-889db5ab7c85
  rules:
  - apiGroups:
    - ""
    resources:
    - '*'
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:get-nodes
    resourceVersion: "211"
    uid: b66a3809-caa3-4e44-afe7-ed53631202c0
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: system:aggregate-to-admin
    resourceVersion: "81"
    uid: 7ce01706-c4b7-4ee4-9e1a-29bcbf1acf67
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: system:aggregate-to-edit
    resourceVersion: "82"
    uid: c06bcbc1-ae50-4532-9e6e-9053b1d9e0e7
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    name: system:aggregate-to-view
    resourceVersion: "83"
    uid: fa7bcf2b-955e-45f0-b007-828c5e41cdfc
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server","rbac.authorization.k8s.io/aggregate-to-admin":"true","rbac.authorization.k8s.io/aggregate-to-edit":"true","rbac.authorization.k8s.io/aggregate-to-view":"true"},"name":"system:aggregated-metrics-reader"},"rules":[{"apiGroups":["metrics.k8s.io"],"resources":["pods","nodes"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2024-10-17T20:57:28Z"
    labels:
      k8s-app: metrics-server
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    name: system:aggregated-metrics-reader
    resourceVersion: "710"
    uid: 7bc4f5fe-5bda-41ea-9444-d290f02c6d6f
  rules:
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:auth-delegator
    resourceVersion: "89"
    uid: 7938b327-837a-416a-b7d4-5efa74e65145
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:basic-user
    resourceVersion: "76"
    uid: 0cda1566-4245-4a7a-aa79-e4b8e21fa652
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - selfsubjectaccessreviews
    - selfsubjectrulesreviews
    verbs:
    - create
  - apiGroups:
    - authentication.k8s.io
    resources:
    - selfsubjectreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
    resourceVersion: "94"
    uid: 20ce6317-50e9-4db1-9bdd-103b8068d5c9
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/nodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
    resourceVersion: "95"
    uid: b1aa8940-103a-47c8-931b-e80c71fbb67f
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/selfnodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kube-apiserver-client-approver
    resourceVersion: "99"
    uid: 551fd5e7-ca49-4f64-a9f5-642414e7bbb3
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kube-apiserver-client-kubelet-approver
    resourceVersion: "100"
    uid: 21ebacc1-6867-412a-b596-e7aa3f2814b3
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kubelet-serving-approver
    resourceVersion: "98"
    uid: 948c4678-b22e-40ce-b101-19be8907244a
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kubelet-serving
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:legacy-unknown-approver
    resourceVersion: "97"
    uid: 4d8a6254-cd8f-47e2-b025-d10687d38173
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:attachdetach-controller
    resourceVersion: "104"
    uid: a262670a-543c-4596-b6ab-03ad8ca93f45
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:certificate-controller
    resourceVersion: "130"
    uid: 125203ff-ffd5-43bb-9cc2-687a58989818
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/approval
    - certificatesigningrequests/status
    verbs:
    - update
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    - kubernetes.io/kube-apiserver-client-kubelet
    - kubernetes.io/kubelet-serving
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - sign
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "105"
    uid: fa023eb4-f1ae-4e79-a05e-923b2ebbbcdd
  rules:
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - clusterroles
    verbs:
    - escalate
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cronjob-controller
    resourceVersion: "106"
    uid: f85dc5b0-bc8f-40ec-bcec-a098c1e43a39
  rules:
  - apiGroups:
    - batch
    resources:
    - cronjobs
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:daemon-set-controller
    resourceVersion: "107"
    uid: a0bb6aa2-35e9-4695-bc75-51832057c542
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:deployment-controller
    resourceVersion: "108"
    uid: 158be559-cdeb-4b2f-a5b6-d79327ec0e79
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/finalizers
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:disruption-controller
    resourceVersion: "109"
    uid: 1724fb11-ca8f-4243-8329-e1e25f3bc656
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpoint-controller
    resourceVersion: "110"
    uid: 707c7f8a-cbba-465f-8f25-4d6ac9785e36
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/restricted
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslice-controller
    resourceVersion: "111"
    uid: 8072e4d1-b0a5-4157-b9c3-05cc7116dbd4
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "112"
    uid: d7dcd888-f275-4bee-80df-c5facb214359
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "114"
    uid: 38c3ef63-dc88-4e07-9126-67e43d9a5884
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:expand-controller
    resourceVersion: "113"
    uid: 33ee8d2c-9508-4619-a265-f876751fff23
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:generic-garbage-collector
    resourceVersion: "115"
    uid: f143e3bf-e966-491c-9972-b991cc0c89ff
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "116"
    uid: a985c593-2997-4c5a-b017-9c95a1bf3f40
  rules:
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - custom.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - external.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:job-controller
    resourceVersion: "117"
    uid: d1d91357-967c-4b1f-b5c6-c6d9aec4b1d3
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - jobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:legacy-service-account-token-cleaner
    resourceVersion: "136"
    uid: 7f8e8391-9bc3-4193-b8ff-68e19a5b4e16
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kube-apiserver-legacy-service-account-token-tracking
    resources:
    - configmaps
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:namespace-controller
    resourceVersion: "118"
    uid: 140a0ab6-fc28-46bd-87d9-3458605ef46b
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces/finalize
    - namespaces/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - deletecollection
    - get
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:node-controller
    resourceVersion: "119"
    uid: e99b9c4b-3990-403c-96c2-88a6fec3d4a1
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - delete
    - get
    - list
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:persistent-volume-binder
    resourceVersion: "120"
    uid: be5194d9-1570-4bc8-9632-f369496f8b47
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumes/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - create
    - delete
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pod-garbage-collector
    resourceVersion: "121"
    uid: a92ae8cf-373a-4e10-9371-6fc647d403e7
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pv-protection-controller
    resourceVersion: "132"
    uid: 5bf29957-9c16-42cd-b36c-97de75c30995
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pvc-protection-controller
    resourceVersion: "131"
    uid: 82401547-ce8a-46d0-830f-73bc9db0109d
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replicaset-controller
    resourceVersion: "122"
    uid: 4d6e5b2a-6f4a-483c-acf1-ccb9c8636288
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replication-controller
    resourceVersion: "123"
    uid: 29339bb1-ee53-4bcd-96e5-e6f39492d67c
  rules:
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:resourcequota-controller
    resourceVersion: "124"
    uid: 56916ed4-2d5f-4ef7-bb24-99004802ccb8
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - resourcequotas/status
    verbs:
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "134"
    uid: 262d1a84-f904-45e3-8546-2d76d010dc99
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:route-controller
    resourceVersion: "125"
    uid: 8a90efe4-24f4-4b91-b16e-63fdbeb8cee4
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-account-controller
    resourceVersion: "126"
    uid: 3faeb5b4-54d0-4154-9996-cd239896d2d7
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-controller
    resourceVersion: "127"
    uid: 71a8c4b6-c298-4ea1-ab7e-eaddaa41f5ad
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:statefulset-controller
    resourceVersion: "128"
    uid: c9c15e85-fbf4-49e7-a944-427910adcd9a
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    resources:
    - statefulsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - delete
    - update
  - apiGroups:
    - ""
    resources:
    - pods/finalizers
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "133"
    uid: 723474fb-1a57-4e7e-bb3f-aabc5190875a
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-controller
    resourceVersion: "129"
    uid: 78f5d438-5e41-46b7-931c-f546ed458680
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:validatingadmissionpolicy-status-controller
    resourceVersion: "135"
    uid: 1135f7b9-2a50-4ee9-a289-41a39e662231
  rules:
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingadmissionpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingadmissionpolicies/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: system:coredns
    resourceVersion: "221"
    uid: f4ac5362-c555-4d18-8ae5-c92406db9305
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    - pods
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:discovery
    resourceVersion: "74"
    uid: 70c44252-c781-477f-9d17-ad731a1a2452
  rules:
  - nonResourceURLs:
    - /api
    - /api/*
    - /apis
    - /apis/*
    - /healthz
    - /livez
    - /openapi
    - /openapi/*
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:heapster
    resourceVersion: "84"
    uid: eb787651-b469-44fc-a375-bee495f597bf
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    - namespaces
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-aggregator
    resourceVersion: "90"
    uid: 77727237-7182-4cc3-8374-fc3b7531a836
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-controller-manager
    resourceVersion: "91"
    uid: 0bf0c033-cf29-4ab1-8958-28969e1b0b2a
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-controller-manager
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps
    - namespaces
    - secrets
    - serviceaccounts
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - update
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-dns
    resourceVersion: "92"
    uid: cad9c5b1-af54-442d-9b7f-230982463a4e
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-scheduler
    resourceVersion: "103"
    uid: 60b0a54c-7166-41c4-bf5a-bcec23e78c42
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-scheduler
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csistoragecapacities
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kubelet-api-admin
    resourceVersion: "87"
    uid: c96783a3-0551-4e66-a996-d7c7ad4a0af3
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - proxy
  - apiGroups:
    - ""
    resources:
    - nodes/log
    - nodes/metrics
    - nodes/proxy
    - nodes/stats
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"system:metrics-server"},"rules":[{"apiGroups":[""],"resources":["nodes/metrics","nodes","pods"],"verbs":["get","list","watch"]},{"apiGroups":["metrics.k8s.io"],"resources":["nodes","pods"],"verbs":["get","list","watch"]}]}
    creationTimestamp: "2024-10-17T20:57:28Z"
    name: system:metrics-server
    resourceVersion: "9958"
    uid: 1140a268-b879-47a3-a1cf-f9d925170e8e
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes/metrics
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - metrics.k8s.io
    resources:
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:monitoring
    resourceVersion: "75"
    uid: 16f78328-efc0-4f41-92ef-7ee98e798899
  rules:
  - nonResourceURLs:
    - /healthz
    - /healthz/*
    - /livez
    - /livez/*
    - /metrics
    - /metrics/slis
    - /readyz
    - /readyz/*
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node
    resourceVersion: "85"
    uid: e82f0a93-525d-4c0e-baa1-10480d7496af
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - get
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - node.k8s.io
    resources:
    - runtimeclasses
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-bootstrapper
    resourceVersion: "88"
    uid: 77b30307-81ea-4ac8-885c-a4dfd1a137a5
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-problem-detector
    resourceVersion: "86"
    uid: a9abbb42-a345-4979-ab10-4dec3b1b3dd9
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-proxier
    resourceVersion: "102"
    uid: 696c5043-fa70-479d-84c3-ee8d59e61ef1
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:persistent-volume-provisioner
    resourceVersion: "93"
    uid: 36f72e13-6c19-48f0-bed3-d37710a9d38a
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:public-info-viewer
    resourceVersion: "77"
    uid: 9ef6cec4-cbe7-4403-879d-95c1ead2e910
  rules:
  - nonResourceURLs:
    - /healthz
    - /livez
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:service-account-issuer-discovery
    resourceVersion: "101"
    uid: 7a25dfe7-1d2f-4268-bb4c-af5f424fdce2
  rules:
  - nonResourceURLs:
    - /.well-known/openid-configuration
    - /.well-known/openid-configuration/
    - /openid/v1/jwks
    - /openid/v1/jwks/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:volume-scheduler
    resourceVersion: "96"
    uid: 2c11e04c-a1a2-4052-ab25-a4666f0ceaf3
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - patch
    - update
    - watch
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: view
    resourceVersion: "711"
    uid: ba45576d-3e4f-4360-a141-ac10ebc96ab3
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    - nodes
    verbs:
    - get
    - list
    - watch
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: cluster-admin
    resourceVersion: "137"
    uid: d7c998e7-91d7-46fc-986f-1333ed638e73
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:masters
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-28T13:48:31Z"
    name: jenkins-admin
    resourceVersion: "6787"
    uid: 43feff7c-d0e8-43e4-b7b3-6ab17095b407
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: jenkins-admin
  subjects:
  - kind: ServiceAccount
    name: jenkins-admin
    namespace: ci-cd
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"kube-proxy"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:node-proxier"},"subjects":[{"kind":"ServiceAccount","name":"kube-proxy","namespace":"kube-system"}]}
    creationTimestamp: "2024-10-28T14:25:23Z"
    name: kube-proxy
    resourceVersion: "10605"
    uid: 35279de5-ef65-450b-a211-94d25d4aa1cd
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - kind: ServiceAccount
    name: kube-proxy
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:cluster-admins
    resourceVersion: "201"
    uid: 6ac8a186-f143-4451-bb29-20618ab20ec7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: kubeadm:cluster-admins
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:get-nodes
    resourceVersion: "212"
    uid: 68b20b5c-8aa3-47ff-8714-4d3a0239d523
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kubeadm:get-nodes
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:kubelet-bootstrap
    resourceVersion: "213"
    uid: 6f1b7f86-14a5-4541-9fe4-a5edf36ab67d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-bootstrapper
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:node-autoapprove-bootstrap
    resourceVersion: "214"
    uid: 9f702859-ce3d-43a0-8793-8a6bfc7d50cb
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: kubeadm:node-autoapprove-certificate-rotation
    resourceVersion: "215"
    uid: 6aa96954-da4f-44ab-a5af-f3bc3b473aa3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:23Z"
    name: kubeadm:node-proxier
    resourceVersion: "245"
    uid: c579b577-91cd-4d16-9ff0-e11458a43c45
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - kind: ServiceAccount
    name: kube-proxy
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-28T14:17:33Z"
    name: metrics-server-auth
    resourceVersion: "9753"
    uid: deb57ac6-0ab1-4205-9561-d3b58515678c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:metrics-server
  subjects:
  - kind: ServiceAccount
    name: metrics-server
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"metrics-server:system:auth-delegator"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:auth-delegator"},"subjects":[{"kind":"ServiceAccount","name":"metrics-server","namespace":"kube-system"}]}
    creationTimestamp: "2024-10-17T20:57:28Z"
    labels:
      k8s-app: metrics-server
    name: metrics-server:system:auth-delegator
    resourceVersion: "717"
    uid: 95736e1d-517c-4f6e-a90f-a42af1d7a7cf
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:auth-delegator
  subjects:
  - kind: ServiceAccount
    name: metrics-server
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:basic-user
    resourceVersion: "140"
    uid: 819ec8a4-1268-4fbc-b44f-bed3c988dfe4
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:basic-user
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:attachdetach-controller
    resourceVersion: "149"
    uid: 9fe71c9a-b068-4abe-b7f7-b327e0382e95
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:attachdetach-controller
  subjects:
  - kind: ServiceAccount
    name: attachdetach-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:certificate-controller
    resourceVersion: "175"
    uid: 6fd353db-c1b7-435a-b48f-3b4e85c29c3d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:certificate-controller
  subjects:
  - kind: ServiceAccount
    name: certificate-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "150"
    uid: 89743213-274a-49b6-8c70-f56b6b03f17b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:clusterrole-aggregation-controller
  subjects:
  - kind: ServiceAccount
    name: clusterrole-aggregation-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cronjob-controller
    resourceVersion: "151"
    uid: fe77709a-3bde-46bd-84d1-d14791b10d50
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:cronjob-controller
  subjects:
  - kind: ServiceAccount
    name: cronjob-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:daemon-set-controller
    resourceVersion: "152"
    uid: 62cc93c9-81e7-4a9c-9038-19097f31e72c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:daemon-set-controller
  subjects:
  - kind: ServiceAccount
    name: daemon-set-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:deployment-controller
    resourceVersion: "153"
    uid: 5ba7bd05-8be1-4147-95d6-a77fe762aa6e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:deployment-controller
  subjects:
  - kind: ServiceAccount
    name: deployment-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:disruption-controller
    resourceVersion: "154"
    uid: 80a68f55-46ff-4c20-967c-66353947e417
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:disruption-controller
  subjects:
  - kind: ServiceAccount
    name: disruption-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpoint-controller
    resourceVersion: "155"
    uid: ed6e941f-599d-44f7-9b08-b4de9cf4f8d2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpoint-controller
  subjects:
  - kind: ServiceAccount
    name: endpoint-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslice-controller
    resourceVersion: "156"
    uid: 14f2ac2a-2847-4503-9b26-c726867c6073
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslice-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslice-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "157"
    uid: 631c3611-b775-48b7-a489-9a46b0d56c8c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslicemirroring-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslicemirroring-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "159"
    uid: 6206f3b5-7ea1-48a3-bfd4-e6fd7b9f8601
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ephemeral-volume-controller
  subjects:
  - kind: ServiceAccount
    name: ephemeral-volume-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:expand-controller
    resourceVersion: "158"
    uid: 4ce2f08e-d5ed-4834-a87b-4175a85e3c67
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:expand-controller
  subjects:
  - kind: ServiceAccount
    name: expand-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:generic-garbage-collector
    resourceVersion: "160"
    uid: a40712a9-2bd3-46cc-be50-c00139da5d18
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:generic-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: generic-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "161"
    uid: 7f1acd4c-2bb0-43b1-a048-5eeb00ec3ca0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:horizontal-pod-autoscaler
  subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:job-controller
    resourceVersion: "162"
    uid: 01822c86-5776-4ccc-b8cb-7805c9000fcd
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:job-controller
  subjects:
  - kind: ServiceAccount
    name: job-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:legacy-service-account-token-cleaner
    resourceVersion: "181"
    uid: 64fc9c79-8fd6-4c19-88bb-02967543ecb2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:legacy-service-account-token-cleaner
  subjects:
  - kind: ServiceAccount
    name: legacy-service-account-token-cleaner
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:namespace-controller
    resourceVersion: "163"
    uid: 523a88cd-5645-4f20-b192-1339adb95148
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:namespace-controller
  subjects:
  - kind: ServiceAccount
    name: namespace-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:node-controller
    resourceVersion: "164"
    uid: 6bbd348f-d8d4-4dfa-a3a5-d24e15fef0ee
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:node-controller
  subjects:
  - kind: ServiceAccount
    name: node-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:persistent-volume-binder
    resourceVersion: "165"
    uid: 73d5f695-3dc9-41a5-ba1a-71d8ea04075e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:persistent-volume-binder
  subjects:
  - kind: ServiceAccount
    name: persistent-volume-binder
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pod-garbage-collector
    resourceVersion: "166"
    uid: 30b391da-ab98-4e0f-91e0-0a7980c78fb3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pod-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: pod-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pv-protection-controller
    resourceVersion: "177"
    uid: bab10cb9-d165-442d-8175-8d6d32577bba
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pv-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pv-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pvc-protection-controller
    resourceVersion: "176"
    uid: d0318ae1-9730-430d-8bcf-eafcfcc91341
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pvc-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pvc-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replicaset-controller
    resourceVersion: "167"
    uid: 0adbe6aa-0c0d-4527-9b40-15563463bb08
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replicaset-controller
  subjects:
  - kind: ServiceAccount
    name: replicaset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replication-controller
    resourceVersion: "168"
    uid: 12e6b358-b95a-41e4-8b09-2baf6c376186
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replication-controller
  subjects:
  - kind: ServiceAccount
    name: replication-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:resourcequota-controller
    resourceVersion: "169"
    uid: 194c9d9e-65ba-4ae6-bf73-a0f17545587e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:resourcequota-controller
  subjects:
  - kind: ServiceAccount
    name: resourcequota-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "179"
    uid: ca7bc617-ddb6-436e-8c39-742bab80fd0c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:root-ca-cert-publisher
  subjects:
  - kind: ServiceAccount
    name: root-ca-cert-publisher
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:route-controller
    resourceVersion: "170"
    uid: fc81f687-67e7-4ffe-83ea-b13df16f9e0d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:route-controller
  subjects:
  - kind: ServiceAccount
    name: route-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-account-controller
    resourceVersion: "171"
    uid: c836ca37-a32e-4a37-83dc-3ed0fdb624ef
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-account-controller
  subjects:
  - kind: ServiceAccount
    name: service-account-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-controller
    resourceVersion: "172"
    uid: 10edc0aa-f79f-4545-ba72-df69c181d14c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-controller
  subjects:
  - kind: ServiceAccount
    name: service-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:statefulset-controller
    resourceVersion: "173"
    uid: c5165b67-da35-4ea6-a47f-c0d6f8b3645b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:statefulset-controller
  subjects:
  - kind: ServiceAccount
    name: statefulset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "178"
    uid: f347d576-786c-4aff-ab88-5b3d911a310c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-after-finished-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-after-finished-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-controller
    resourceVersion: "174"
    uid: 7486e17c-34a0-4590-a792-53101ead36c0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:validatingadmissionpolicy-status-controller
    resourceVersion: "180"
    uid: 9a681271-7260-4630-93c0-38b6ec8e608b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:validatingadmissionpolicy-status-controller
  subjects:
  - kind: ServiceAccount
    name: validatingadmissionpolicy-status-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2024-10-17T20:53:22Z"
    name: system:coredns
    resourceVersion: "235"
    uid: e9fd1bf5-54d9-406b-bf85-08c5f22abfab
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:coredns
  subjects:
  - kind: ServiceAccount
    name: coredns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:discovery
    resourceVersion: "139"
    uid: 7e29b597-ff4d-4d2e-a420-57ad48159535
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-controller-manager
    resourceVersion: "143"
    uid: 5f38449d-baf2-4b5e-a891-4c80da436076
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-dns
    resourceVersion: "144"
    uid: 91da5af9-08bb-4c68-97b1-ec9dd4e09391
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-dns
  subjects:
  - kind: ServiceAccount
    name: kube-dns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"system:kube-scheduler"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:kube-scheduler"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"User","name":"system:kube-scheduler"}]}
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-scheduler
    resourceVersion: "13579"
    uid: b8c1f85f-63e8-46b1-9cca-6ca8bd4a7658
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"k8s-app":"metrics-server"},"name":"system:metrics-server"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"system:metrics-server"},"subjects":[{"kind":"ServiceAccount","name":"metrics-server","namespace":"kube-system"}]}
    creationTimestamp: "2024-10-17T20:57:28Z"
    labels:
      k8s-app: metrics-server
    name: system:metrics-server
    resourceVersion: "718"
    uid: 18801f71-bede-455d-9880-5fdbef99d0f4
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:metrics-server
  subjects:
  - kind: ServiceAccount
    name: metrics-server
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:monitoring
    resourceVersion: "138"
    uid: 9393786a-ff84-442c-8859-d0dbbeebeff7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:monitoring
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node
    resourceVersion: "147"
    uid: 272a389e-3622-4309-8f39-e02457023eaa
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-proxier
    resourceVersion: "142"
    uid: 1182c71c-e3fd-4135-9fe2-1dda5bed0d45
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-proxy
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:public-info-viewer
    resourceVersion: "141"
    uid: 19219d14-a282-4b27-8174-73a0d804ba0b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:public-info-viewer
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:service-account-issuer-discovery
    resourceVersion: "148"
    uid: 7fbdaf02-1b00-4790-a76b-c89f041e0295
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:service-account-issuer-discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2024-10-17T20:53:21Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:volume-scheduler
    resourceVersion: "146"
    uid: f4e4c0e8-184f-4c6f-8d28-b154e29ca95d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:volume-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: "2024-10-29T14:53:27Z"
    generation: 1
    name: allow-all-between-namespaces
    namespace: ci-cd
    resourceVersion: "30604"
    uid: 6fecce02-ebb4-4e4f-bc02-d96a42e32a44
  spec:
    ingress:
    - from:
      - namespaceSelector: {}
    podSelector: {}
    policyTypes:
    - Ingress
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2024-10-28T14:13:27Z"
    generation: 1
    labels:
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "36929"
    uid: 36fbba04-9ed7-4452-a16f-c08946dacdb0
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - /usr/local/bin/kube-proxy --config=/var/lib/kube-proxy/config.conf --hostname-override=${NODE_NAME}
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.30.5
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kube-proxy
            name: kube-proxy
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items: []
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items: []
kind: List
metadata:
  resourceVersion: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2024-10-28T13:41:41Z"
    labels:
      kubernetes.io/metadata.name: ci-cd
    name: ci-cd
    resourceVersion: "6148"
    uid: e6392842-2873-4972-9ce6-762484f9c1e9
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2024-10-17T20:53:20Z"
    labels:
      kubernetes.io/metadata.name: default
    name: default
    resourceVersion: "34"
    uid: 6756cddd-5334-46eb-bbc4-65a377691d46
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2024-10-28T13:41:56Z"
    labels:
      kubernetes.io/metadata.name: development
      name: development
    name: development
    resourceVersion: "27251"
    uid: 172874f6-8d65-4b01-bb20-b20ef8931101
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"labels":{"k8s-app":"flannel","pod-security.kubernetes.io/enforce":"privileged"},"name":"kube-flannel"}}
    creationTimestamp: "2024-10-17T21:18:46Z"
    deletionTimestamp: "2024-10-30T14:40:50Z"
    labels:
      k8s-app: flannel
      kubernetes.io/metadata.name: kube-flannel
      pod-security.kubernetes.io/enforce: privileged
    name: kube-flannel
    resourceVersion: "34039"
    uid: a9e81d45-1934-4dce-a18c-cbbf5ca42c5e
  spec:
    finalizers:
    - kubernetes
  status:
    conditions:
    - lastTransitionTime: "2024-10-30T14:43:58Z"
      message: 'Discovery failed for some groups, 1 failing: unable to retrieve the
        complete list of server APIs: metrics.k8s.io/v1beta1: stale GroupVersion discovery:
        metrics.k8s.io/v1beta1'
      reason: DiscoveryFailed
      status: "True"
      type: NamespaceDeletionDiscoveryFailure
    - lastTransitionTime: "2024-10-30T14:40:55Z"
      message: All legacy kube types successfully parsed
      reason: ParsedGroupVersions
      status: "False"
      type: NamespaceDeletionGroupVersionParsingFailure
    - lastTransitionTime: "2024-10-30T14:43:58Z"
      message: All content successfully deleted, may be waiting on finalization
      reason: ContentDeleted
      status: "False"
      type: NamespaceDeletionContentFailure
    - lastTransitionTime: "2024-10-30T14:43:58Z"
      message: All content successfully removed
      reason: ContentRemoved
      status: "False"
      type: NamespaceContentRemaining
    - lastTransitionTime: "2024-10-30T14:40:55Z"
      message: All content-preserving finalizers finished
      reason: ContentHasNoFinalizers
      status: "False"
      type: NamespaceFinalizersRemaining
    phase: Terminating
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2024-10-17T20:53:20Z"
    labels:
      kubernetes.io/metadata.name: kube-node-lease
    name: kube-node-lease
    resourceVersion: "26"
    uid: fe57cc4c-9ac7-466c-9065-b7fe52c1cb95
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2024-10-17T20:53:20Z"
    labels:
      kubernetes.io/metadata.name: kube-public
    name: kube-public
    resourceVersion: "19"
    uid: 90a5964e-4b8b-4b14-ab11-4c1af334c14f
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2024-10-17T20:53:20Z"
    labels:
      kubernetes.io/metadata.name: kube-system
    name: kube-system
    resourceVersion: "11"
    uid: 16abbcf0-bfbc-4668-88f2-458235a52558
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2024-10-28T13:42:13Z"
    labels:
      kubernetes.io/metadata.name: pre-production
    name: pre-production
    resourceVersion: "6210"
    uid: 8c45ba71-b952-4615-a75e-39c64456c196
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2024-10-28T13:42:21Z"
    labels:
      kubernetes.io/metadata.name: production
    name: production
    resourceVersion: "6224"
    uid: 9197155e-2030-46e2-8133-d5ded78adba5
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
- apiVersion: v1
  kind: Namespace
  metadata:
    creationTimestamp: "2024-10-28T13:42:05Z"
    labels:
      kubernetes.io/metadata.name: testing
    name: testing
    resourceVersion: "6194"
    uid: 29c33d5b-be63-4ade-8ad8-b32b0d37c5d2
  spec:
    finalizers:
    - kubernetes
  status:
    phase: Active
kind: List
metadata:
  resourceVersion: ""
---
